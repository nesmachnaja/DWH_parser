//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace robot {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Total_Bosnia")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Total_Bosnia : global::System.Data.DataSet {
        
        private TOTAL_SNAPDataTable tableTOTAL_SNAP;
        
        private TOTAL_SNAP_CFIELDDataTable tableTOTAL_SNAP_CFIELD;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Total_Bosnia() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected Total_Bosnia(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TOTAL_SNAP"] != null)) {
                    base.Tables.Add(new TOTAL_SNAPDataTable(ds.Tables["TOTAL_SNAP"]));
                }
                if ((ds.Tables["TOTAL_SNAP_CFIELD"] != null)) {
                    base.Tables.Add(new TOTAL_SNAP_CFIELDDataTable(ds.Tables["TOTAL_SNAP_CFIELD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TOTAL_SNAPDataTable TOTAL_SNAP {
            get {
                return this.tableTOTAL_SNAP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TOTAL_SNAP_CFIELDDataTable TOTAL_SNAP_CFIELD {
            get {
                return this.tableTOTAL_SNAP_CFIELD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Total_Bosnia cln = ((Total_Bosnia)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TOTAL_SNAP"] != null)) {
                    base.Tables.Add(new TOTAL_SNAPDataTable(ds.Tables["TOTAL_SNAP"]));
                }
                if ((ds.Tables["TOTAL_SNAP_CFIELD"] != null)) {
                    base.Tables.Add(new TOTAL_SNAP_CFIELDDataTable(ds.Tables["TOTAL_SNAP_CFIELD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTOTAL_SNAP = ((TOTAL_SNAPDataTable)(base.Tables["TOTAL_SNAP"]));
            if ((initTable == true)) {
                if ((this.tableTOTAL_SNAP != null)) {
                    this.tableTOTAL_SNAP.InitVars();
                }
            }
            this.tableTOTAL_SNAP_CFIELD = ((TOTAL_SNAP_CFIELDDataTable)(base.Tables["TOTAL_SNAP_CFIELD"]));
            if ((initTable == true)) {
                if ((this.tableTOTAL_SNAP_CFIELD != null)) {
                    this.tableTOTAL_SNAP_CFIELD.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Total_Bosnia";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Total_Bosnia.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTOTAL_SNAP = new TOTAL_SNAPDataTable();
            base.Tables.Add(this.tableTOTAL_SNAP);
            this.tableTOTAL_SNAP_CFIELD = new TOTAL_SNAP_CFIELDDataTable();
            base.Tables.Add(this.tableTOTAL_SNAP_CFIELD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTOTAL_SNAP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTOTAL_SNAP_CFIELD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Total_Bosnia ds = new Total_Bosnia();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TOTAL_SNAPRowChangeEventHandler(object sender, TOTAL_SNAPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TOTAL_SNAP_CFIELDRowChangeEventHandler(object sender, TOTAL_SNAP_CFIELDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TOTAL_SNAPDataTable : global::System.Data.TypedTableBase<TOTAL_SNAPRow> {
            
            private global::System.Data.DataColumn columnSnapdate;
            
            private global::System.Data.DataColumn columncountry;
            
            private global::System.Data.DataColumn columna_id;
            
            private global::System.Data.DataColumn columnPRINCIPAL_RESIDUAL;
            
            private global::System.Data.DataColumn columnINT_RESIDUAL;
            
            private global::System.Data.DataColumn columnFEE_RESIDUAL;
            
            private global::System.Data.DataColumn columnPRINCIPAL_OVERDUE_RESIDUAL;
            
            private global::System.Data.DataColumn columnINT_OVERDUE_RESIDUAL;
            
            private global::System.Data.DataColumn columnFEE_OVERDUE_RESIDUAL;
            
            private global::System.Data.DataColumn columnDPD;
            
            private global::System.Data.DataColumn columnPREPAY_RESIDUAL;
            
            private global::System.Data.DataColumn columnPENALTIES_RESIDUAL;
            
            private global::System.Data.DataColumn columnOTHER_RESIDUAL;
            
            private global::System.Data.DataColumn columnEXT_FEE_RESIDUAL;
            
            private global::System.Data.DataColumn columnOVERPAYMENT_RESIDUAL;
            
            private global::System.Data.DataColumn columnactual_id;
            
            private global::System.Data.DataColumn columnstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAPDataTable() {
                this.TableName = "TOTAL_SNAP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TOTAL_SNAPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TOTAL_SNAPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SnapdateColumn {
                get {
                    return this.columnSnapdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn a_idColumn {
                get {
                    return this.columna_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRINCIPAL_RESIDUALColumn {
                get {
                    return this.columnPRINCIPAL_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INT_RESIDUALColumn {
                get {
                    return this.columnINT_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FEE_RESIDUALColumn {
                get {
                    return this.columnFEE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRINCIPAL_OVERDUE_RESIDUALColumn {
                get {
                    return this.columnPRINCIPAL_OVERDUE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INT_OVERDUE_RESIDUALColumn {
                get {
                    return this.columnINT_OVERDUE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FEE_OVERDUE_RESIDUALColumn {
                get {
                    return this.columnFEE_OVERDUE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DPDColumn {
                get {
                    return this.columnDPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAY_RESIDUALColumn {
                get {
                    return this.columnPREPAY_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PENALTIES_RESIDUALColumn {
                get {
                    return this.columnPENALTIES_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTHER_RESIDUALColumn {
                get {
                    return this.columnOTHER_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXT_FEE_RESIDUALColumn {
                get {
                    return this.columnEXT_FEE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OVERPAYMENT_RESIDUALColumn {
                get {
                    return this.columnOVERPAYMENT_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn actual_idColumn {
                get {
                    return this.columnactual_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAPRow this[int index] {
                get {
                    return ((TOTAL_SNAPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAPRowChangeEventHandler TOTAL_SNAPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAPRowChangeEventHandler TOTAL_SNAPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAPRowChangeEventHandler TOTAL_SNAPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAPRowChangeEventHandler TOTAL_SNAPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTOTAL_SNAPRow(TOTAL_SNAPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAPRow AddTOTAL_SNAPRow(
                        System.DateTime Snapdate, 
                        string country, 
                        string a_id, 
                        double PRINCIPAL_RESIDUAL, 
                        double INT_RESIDUAL, 
                        double FEE_RESIDUAL, 
                        double PRINCIPAL_OVERDUE_RESIDUAL, 
                        double INT_OVERDUE_RESIDUAL, 
                        double FEE_OVERDUE_RESIDUAL, 
                        double DPD, 
                        double PREPAY_RESIDUAL, 
                        double PENALTIES_RESIDUAL, 
                        double OTHER_RESIDUAL, 
                        double EXT_FEE_RESIDUAL, 
                        double OVERPAYMENT_RESIDUAL, 
                        string actual_id, 
                        string status) {
                TOTAL_SNAPRow rowTOTAL_SNAPRow = ((TOTAL_SNAPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Snapdate,
                        country,
                        a_id,
                        PRINCIPAL_RESIDUAL,
                        INT_RESIDUAL,
                        FEE_RESIDUAL,
                        PRINCIPAL_OVERDUE_RESIDUAL,
                        INT_OVERDUE_RESIDUAL,
                        FEE_OVERDUE_RESIDUAL,
                        DPD,
                        PREPAY_RESIDUAL,
                        PENALTIES_RESIDUAL,
                        OTHER_RESIDUAL,
                        EXT_FEE_RESIDUAL,
                        OVERPAYMENT_RESIDUAL,
                        actual_id,
                        status};
                rowTOTAL_SNAPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTOTAL_SNAPRow);
                return rowTOTAL_SNAPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TOTAL_SNAPDataTable cln = ((TOTAL_SNAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TOTAL_SNAPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSnapdate = base.Columns["Snapdate"];
                this.columncountry = base.Columns["country"];
                this.columna_id = base.Columns["a_id"];
                this.columnPRINCIPAL_RESIDUAL = base.Columns["PRINCIPAL_RESIDUAL"];
                this.columnINT_RESIDUAL = base.Columns["INT_RESIDUAL"];
                this.columnFEE_RESIDUAL = base.Columns["FEE_RESIDUAL"];
                this.columnPRINCIPAL_OVERDUE_RESIDUAL = base.Columns["PRINCIPAL_OVERDUE_RESIDUAL"];
                this.columnINT_OVERDUE_RESIDUAL = base.Columns["INT_OVERDUE_RESIDUAL"];
                this.columnFEE_OVERDUE_RESIDUAL = base.Columns["FEE_OVERDUE_RESIDUAL"];
                this.columnDPD = base.Columns["DPD"];
                this.columnPREPAY_RESIDUAL = base.Columns["PREPAY_RESIDUAL"];
                this.columnPENALTIES_RESIDUAL = base.Columns["PENALTIES_RESIDUAL"];
                this.columnOTHER_RESIDUAL = base.Columns["OTHER_RESIDUAL"];
                this.columnEXT_FEE_RESIDUAL = base.Columns["EXT_FEE_RESIDUAL"];
                this.columnOVERPAYMENT_RESIDUAL = base.Columns["OVERPAYMENT_RESIDUAL"];
                this.columnactual_id = base.Columns["actual_id"];
                this.columnstatus = base.Columns["status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSnapdate = new global::System.Data.DataColumn("Snapdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapdate);
                this.columncountry = new global::System.Data.DataColumn("country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columna_id = new global::System.Data.DataColumn("a_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columna_id);
                this.columnPRINCIPAL_RESIDUAL = new global::System.Data.DataColumn("PRINCIPAL_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCIPAL_RESIDUAL);
                this.columnINT_RESIDUAL = new global::System.Data.DataColumn("INT_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_RESIDUAL);
                this.columnFEE_RESIDUAL = new global::System.Data.DataColumn("FEE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEE_RESIDUAL);
                this.columnPRINCIPAL_OVERDUE_RESIDUAL = new global::System.Data.DataColumn("PRINCIPAL_OVERDUE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCIPAL_OVERDUE_RESIDUAL);
                this.columnINT_OVERDUE_RESIDUAL = new global::System.Data.DataColumn("INT_OVERDUE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_OVERDUE_RESIDUAL);
                this.columnFEE_OVERDUE_RESIDUAL = new global::System.Data.DataColumn("FEE_OVERDUE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEE_OVERDUE_RESIDUAL);
                this.columnDPD = new global::System.Data.DataColumn("DPD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPD);
                this.columnPREPAY_RESIDUAL = new global::System.Data.DataColumn("PREPAY_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAY_RESIDUAL);
                this.columnPENALTIES_RESIDUAL = new global::System.Data.DataColumn("PENALTIES_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPENALTIES_RESIDUAL);
                this.columnOTHER_RESIDUAL = new global::System.Data.DataColumn("OTHER_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_RESIDUAL);
                this.columnEXT_FEE_RESIDUAL = new global::System.Data.DataColumn("EXT_FEE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT_FEE_RESIDUAL);
                this.columnOVERPAYMENT_RESIDUAL = new global::System.Data.DataColumn("OVERPAYMENT_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVERPAYMENT_RESIDUAL);
                this.columnactual_id = new global::System.Data.DataColumn("actual_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactual_id);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncountry.MaxLength = 255;
                this.columna_id.MaxLength = 255;
                this.columnactual_id.MaxLength = 255;
                this.columnstatus.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAPRow NewTOTAL_SNAPRow() {
                return ((TOTAL_SNAPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TOTAL_SNAPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TOTAL_SNAPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TOTAL_SNAPRowChanged != null)) {
                    this.TOTAL_SNAPRowChanged(this, new TOTAL_SNAPRowChangeEvent(((TOTAL_SNAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TOTAL_SNAPRowChanging != null)) {
                    this.TOTAL_SNAPRowChanging(this, new TOTAL_SNAPRowChangeEvent(((TOTAL_SNAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TOTAL_SNAPRowDeleted != null)) {
                    this.TOTAL_SNAPRowDeleted(this, new TOTAL_SNAPRowChangeEvent(((TOTAL_SNAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TOTAL_SNAPRowDeleting != null)) {
                    this.TOTAL_SNAPRowDeleting(this, new TOTAL_SNAPRowChangeEvent(((TOTAL_SNAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTOTAL_SNAPRow(TOTAL_SNAPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Total_Bosnia ds = new Total_Bosnia();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TOTAL_SNAPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TOTAL_SNAP_CFIELDDataTable : global::System.Data.TypedTableBase<TOTAL_SNAP_CFIELDRow> {
            
            private global::System.Data.DataColumn columnSnapDate;
            
            private global::System.Data.DataColumn columnmob_v;
            
            private global::System.Data.DataColumn columna_month;
            
            private global::System.Data.DataColumn columna_id;
            
            private global::System.Data.DataColumn columncountry;
            
            private global::System.Data.DataColumn columnProduct;
            
            private global::System.Data.DataColumn columnProduct_group;
            
            private global::System.Data.DataColumn columnb_product;
            
            private global::System.Data.DataColumn columncycle_name;
            
            private global::System.Data.DataColumn columnbrand;
            
            private global::System.Data.DataColumn columnbrand_cycle_type;
            
            private global::System.Data.DataColumn columnloan_amount;
            
            private global::System.Data.DataColumn columnloan_term;
            
            private global::System.Data.DataColumn columnloan_repay_amount;
            
            private global::System.Data.DataColumn columnloan_date;
            
            private global::System.Data.DataColumn columnPRINCIPAL_RESIDUAL;
            
            private global::System.Data.DataColumn columnINTFEE_RESIDUAL;
            
            private global::System.Data.DataColumn columnPORTFOLIO_RESIDUAL;
            
            private global::System.Data.DataColumn columnPREPAY_RESIDUAL;
            
            private global::System.Data.DataColumn columnPENALTIES_RESIDUAL;
            
            private global::System.Data.DataColumn columnOTHER_RESIDUAL;
            
            private global::System.Data.DataColumn columnEXT_FEE_RESIDUAL;
            
            private global::System.Data.DataColumn columnOVERPAYMENT_RESIDUAL;
            
            private global::System.Data.DataColumn columnPORTFOLIO_SOLD_RESIDUAL;
            
            private global::System.Data.DataColumn columnPRINCIPAL_SOLD_RESIDUAL;
            
            private global::System.Data.DataColumn columnINTFEE_SOLD_RESIDUAL;
            
            private global::System.Data.DataColumn columnAGREEMENT_CNT;
            
            private global::System.Data.DataColumn columnAGREEMENT_SOLD_CNT;
            
            private global::System.Data.DataColumn columnDPD;
            
            private global::System.Data.DataColumn columnDPD_prev;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAP_CFIELDDataTable() {
                this.TableName = "TOTAL_SNAP_CFIELD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TOTAL_SNAP_CFIELDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TOTAL_SNAP_CFIELDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SnapDateColumn {
                get {
                    return this.columnSnapDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn mob_vColumn {
                get {
                    return this.columnmob_v;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn a_monthColumn {
                get {
                    return this.columna_month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn a_idColumn {
                get {
                    return this.columna_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductColumn {
                get {
                    return this.columnProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Product_groupColumn {
                get {
                    return this.columnProduct_group;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn b_productColumn {
                get {
                    return this.columnb_product;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cycle_nameColumn {
                get {
                    return this.columncycle_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn brandColumn {
                get {
                    return this.columnbrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn brand_cycle_typeColumn {
                get {
                    return this.columnbrand_cycle_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn loan_amountColumn {
                get {
                    return this.columnloan_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn loan_termColumn {
                get {
                    return this.columnloan_term;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn loan_repay_amountColumn {
                get {
                    return this.columnloan_repay_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn loan_dateColumn {
                get {
                    return this.columnloan_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRINCIPAL_RESIDUALColumn {
                get {
                    return this.columnPRINCIPAL_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTFEE_RESIDUALColumn {
                get {
                    return this.columnINTFEE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PORTFOLIO_RESIDUALColumn {
                get {
                    return this.columnPORTFOLIO_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAY_RESIDUALColumn {
                get {
                    return this.columnPREPAY_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PENALTIES_RESIDUALColumn {
                get {
                    return this.columnPENALTIES_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTHER_RESIDUALColumn {
                get {
                    return this.columnOTHER_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXT_FEE_RESIDUALColumn {
                get {
                    return this.columnEXT_FEE_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OVERPAYMENT_RESIDUALColumn {
                get {
                    return this.columnOVERPAYMENT_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PORTFOLIO_SOLD_RESIDUALColumn {
                get {
                    return this.columnPORTFOLIO_SOLD_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRINCIPAL_SOLD_RESIDUALColumn {
                get {
                    return this.columnPRINCIPAL_SOLD_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTFEE_SOLD_RESIDUALColumn {
                get {
                    return this.columnINTFEE_SOLD_RESIDUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AGREEMENT_CNTColumn {
                get {
                    return this.columnAGREEMENT_CNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AGREEMENT_SOLD_CNTColumn {
                get {
                    return this.columnAGREEMENT_SOLD_CNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DPDColumn {
                get {
                    return this.columnDPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DPD_prevColumn {
                get {
                    return this.columnDPD_prev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAP_CFIELDRow this[int index] {
                get {
                    return ((TOTAL_SNAP_CFIELDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAP_CFIELDRowChangeEventHandler TOTAL_SNAP_CFIELDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAP_CFIELDRowChangeEventHandler TOTAL_SNAP_CFIELDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAP_CFIELDRowChangeEventHandler TOTAL_SNAP_CFIELDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TOTAL_SNAP_CFIELDRowChangeEventHandler TOTAL_SNAP_CFIELDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTOTAL_SNAP_CFIELDRow(TOTAL_SNAP_CFIELDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAP_CFIELDRow AddTOTAL_SNAP_CFIELDRow(
                        System.DateTime SnapDate, 
                        int mob_v, 
                        System.DateTime a_month, 
                        string a_id, 
                        string country, 
                        string Product, 
                        string Product_group, 
                        string b_product, 
                        string cycle_name, 
                        string brand, 
                        string brand_cycle_type, 
                        double loan_amount, 
                        double loan_term, 
                        double loan_repay_amount, 
                        System.DateTime loan_date, 
                        double PRINCIPAL_RESIDUAL, 
                        double INTFEE_RESIDUAL, 
                        double PORTFOLIO_RESIDUAL, 
                        double PREPAY_RESIDUAL, 
                        double PENALTIES_RESIDUAL, 
                        double OTHER_RESIDUAL, 
                        double EXT_FEE_RESIDUAL, 
                        double OVERPAYMENT_RESIDUAL, 
                        double PORTFOLIO_SOLD_RESIDUAL, 
                        double PRINCIPAL_SOLD_RESIDUAL, 
                        double INTFEE_SOLD_RESIDUAL, 
                        int AGREEMENT_CNT, 
                        int AGREEMENT_SOLD_CNT, 
                        double DPD, 
                        double DPD_prev) {
                TOTAL_SNAP_CFIELDRow rowTOTAL_SNAP_CFIELDRow = ((TOTAL_SNAP_CFIELDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SnapDate,
                        mob_v,
                        a_month,
                        a_id,
                        country,
                        Product,
                        Product_group,
                        b_product,
                        cycle_name,
                        brand,
                        brand_cycle_type,
                        loan_amount,
                        loan_term,
                        loan_repay_amount,
                        loan_date,
                        PRINCIPAL_RESIDUAL,
                        INTFEE_RESIDUAL,
                        PORTFOLIO_RESIDUAL,
                        PREPAY_RESIDUAL,
                        PENALTIES_RESIDUAL,
                        OTHER_RESIDUAL,
                        EXT_FEE_RESIDUAL,
                        OVERPAYMENT_RESIDUAL,
                        PORTFOLIO_SOLD_RESIDUAL,
                        PRINCIPAL_SOLD_RESIDUAL,
                        INTFEE_SOLD_RESIDUAL,
                        AGREEMENT_CNT,
                        AGREEMENT_SOLD_CNT,
                        DPD,
                        DPD_prev};
                rowTOTAL_SNAP_CFIELDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTOTAL_SNAP_CFIELDRow);
                return rowTOTAL_SNAP_CFIELDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TOTAL_SNAP_CFIELDDataTable cln = ((TOTAL_SNAP_CFIELDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TOTAL_SNAP_CFIELDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSnapDate = base.Columns["SnapDate"];
                this.columnmob_v = base.Columns["mob_v"];
                this.columna_month = base.Columns["a_month"];
                this.columna_id = base.Columns["a_id"];
                this.columncountry = base.Columns["country"];
                this.columnProduct = base.Columns["Product"];
                this.columnProduct_group = base.Columns["Product_group"];
                this.columnb_product = base.Columns["b_product"];
                this.columncycle_name = base.Columns["cycle_name"];
                this.columnbrand = base.Columns["brand"];
                this.columnbrand_cycle_type = base.Columns["brand_cycle_type"];
                this.columnloan_amount = base.Columns["loan_amount"];
                this.columnloan_term = base.Columns["loan_term"];
                this.columnloan_repay_amount = base.Columns["loan_repay_amount"];
                this.columnloan_date = base.Columns["loan_date"];
                this.columnPRINCIPAL_RESIDUAL = base.Columns["PRINCIPAL_RESIDUAL"];
                this.columnINTFEE_RESIDUAL = base.Columns["INTFEE_RESIDUAL"];
                this.columnPORTFOLIO_RESIDUAL = base.Columns["PORTFOLIO_RESIDUAL"];
                this.columnPREPAY_RESIDUAL = base.Columns["PREPAY_RESIDUAL"];
                this.columnPENALTIES_RESIDUAL = base.Columns["PENALTIES_RESIDUAL"];
                this.columnOTHER_RESIDUAL = base.Columns["OTHER_RESIDUAL"];
                this.columnEXT_FEE_RESIDUAL = base.Columns["EXT_FEE_RESIDUAL"];
                this.columnOVERPAYMENT_RESIDUAL = base.Columns["OVERPAYMENT_RESIDUAL"];
                this.columnPORTFOLIO_SOLD_RESIDUAL = base.Columns["PORTFOLIO_SOLD_RESIDUAL"];
                this.columnPRINCIPAL_SOLD_RESIDUAL = base.Columns["PRINCIPAL_SOLD_RESIDUAL"];
                this.columnINTFEE_SOLD_RESIDUAL = base.Columns["INTFEE_SOLD_RESIDUAL"];
                this.columnAGREEMENT_CNT = base.Columns["AGREEMENT_CNT"];
                this.columnAGREEMENT_SOLD_CNT = base.Columns["AGREEMENT_SOLD_CNT"];
                this.columnDPD = base.Columns["DPD"];
                this.columnDPD_prev = base.Columns["DPD_prev"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSnapDate = new global::System.Data.DataColumn("SnapDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSnapDate);
                this.columnmob_v = new global::System.Data.DataColumn("mob_v", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmob_v);
                this.columna_month = new global::System.Data.DataColumn("a_month", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columna_month);
                this.columna_id = new global::System.Data.DataColumn("a_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columna_id);
                this.columncountry = new global::System.Data.DataColumn("country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columnProduct = new global::System.Data.DataColumn("Product", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct);
                this.columnProduct_group = new global::System.Data.DataColumn("Product_group", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_group);
                this.columnb_product = new global::System.Data.DataColumn("b_product", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnb_product);
                this.columncycle_name = new global::System.Data.DataColumn("cycle_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncycle_name);
                this.columnbrand = new global::System.Data.DataColumn("brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrand);
                this.columnbrand_cycle_type = new global::System.Data.DataColumn("brand_cycle_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrand_cycle_type);
                this.columnloan_amount = new global::System.Data.DataColumn("loan_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloan_amount);
                this.columnloan_term = new global::System.Data.DataColumn("loan_term", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloan_term);
                this.columnloan_repay_amount = new global::System.Data.DataColumn("loan_repay_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloan_repay_amount);
                this.columnloan_date = new global::System.Data.DataColumn("loan_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloan_date);
                this.columnPRINCIPAL_RESIDUAL = new global::System.Data.DataColumn("PRINCIPAL_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCIPAL_RESIDUAL);
                this.columnINTFEE_RESIDUAL = new global::System.Data.DataColumn("INTFEE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTFEE_RESIDUAL);
                this.columnPORTFOLIO_RESIDUAL = new global::System.Data.DataColumn("PORTFOLIO_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTFOLIO_RESIDUAL);
                this.columnPREPAY_RESIDUAL = new global::System.Data.DataColumn("PREPAY_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAY_RESIDUAL);
                this.columnPENALTIES_RESIDUAL = new global::System.Data.DataColumn("PENALTIES_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPENALTIES_RESIDUAL);
                this.columnOTHER_RESIDUAL = new global::System.Data.DataColumn("OTHER_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_RESIDUAL);
                this.columnEXT_FEE_RESIDUAL = new global::System.Data.DataColumn("EXT_FEE_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT_FEE_RESIDUAL);
                this.columnOVERPAYMENT_RESIDUAL = new global::System.Data.DataColumn("OVERPAYMENT_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVERPAYMENT_RESIDUAL);
                this.columnPORTFOLIO_SOLD_RESIDUAL = new global::System.Data.DataColumn("PORTFOLIO_SOLD_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORTFOLIO_SOLD_RESIDUAL);
                this.columnPRINCIPAL_SOLD_RESIDUAL = new global::System.Data.DataColumn("PRINCIPAL_SOLD_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRINCIPAL_SOLD_RESIDUAL);
                this.columnINTFEE_SOLD_RESIDUAL = new global::System.Data.DataColumn("INTFEE_SOLD_RESIDUAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTFEE_SOLD_RESIDUAL);
                this.columnAGREEMENT_CNT = new global::System.Data.DataColumn("AGREEMENT_CNT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGREEMENT_CNT);
                this.columnAGREEMENT_SOLD_CNT = new global::System.Data.DataColumn("AGREEMENT_SOLD_CNT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGREEMENT_SOLD_CNT);
                this.columnDPD = new global::System.Data.DataColumn("DPD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPD);
                this.columnDPD_prev = new global::System.Data.DataColumn("DPD_prev", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPD_prev);
                this.columna_id.MaxLength = 255;
                this.columncountry.MaxLength = 255;
                this.columnProduct.MaxLength = 255;
                this.columnProduct_group.MaxLength = 255;
                this.columnb_product.MaxLength = 255;
                this.columncycle_name.MaxLength = 255;
                this.columnbrand.MaxLength = 255;
                this.columnbrand_cycle_type.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAP_CFIELDRow NewTOTAL_SNAP_CFIELDRow() {
                return ((TOTAL_SNAP_CFIELDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TOTAL_SNAP_CFIELDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TOTAL_SNAP_CFIELDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TOTAL_SNAP_CFIELDRowChanged != null)) {
                    this.TOTAL_SNAP_CFIELDRowChanged(this, new TOTAL_SNAP_CFIELDRowChangeEvent(((TOTAL_SNAP_CFIELDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TOTAL_SNAP_CFIELDRowChanging != null)) {
                    this.TOTAL_SNAP_CFIELDRowChanging(this, new TOTAL_SNAP_CFIELDRowChangeEvent(((TOTAL_SNAP_CFIELDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TOTAL_SNAP_CFIELDRowDeleted != null)) {
                    this.TOTAL_SNAP_CFIELDRowDeleted(this, new TOTAL_SNAP_CFIELDRowChangeEvent(((TOTAL_SNAP_CFIELDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TOTAL_SNAP_CFIELDRowDeleting != null)) {
                    this.TOTAL_SNAP_CFIELDRowDeleting(this, new TOTAL_SNAP_CFIELDRowChangeEvent(((TOTAL_SNAP_CFIELDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTOTAL_SNAP_CFIELDRow(TOTAL_SNAP_CFIELDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Total_Bosnia ds = new Total_Bosnia();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TOTAL_SNAP_CFIELDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TOTAL_SNAPRow : global::System.Data.DataRow {
            
            private TOTAL_SNAPDataTable tableTOTAL_SNAP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TOTAL_SNAPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTOTAL_SNAP = ((TOTAL_SNAPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Snapdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTOTAL_SNAP.SnapdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Snapdate\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.SnapdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string country {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP.countryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'country\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string a_id {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP.a_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'a_id\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.a_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PRINCIPAL_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.PRINCIPAL_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PRINCIPAL_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.PRINCIPAL_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double INT_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.INT_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INT_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.INT_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double FEE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.FEE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FEE_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.FEE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PRINCIPAL_OVERDUE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.PRINCIPAL_OVERDUE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PRINCIPAL_OVERDUE_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.PRINCIPAL_OVERDUE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double INT_OVERDUE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.INT_OVERDUE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INT_OVERDUE_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.INT_OVERDUE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double FEE_OVERDUE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.FEE_OVERDUE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FEE_OVERDUE_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.FEE_OVERDUE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double DPD {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.DPDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DPD\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.DPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PREPAY_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.PREPAY_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PREPAY_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.PREPAY_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PENALTIES_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.PENALTIES_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PENALTIES_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.PENALTIES_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double OTHER_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.OTHER_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OTHER_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.OTHER_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double EXT_FEE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.EXT_FEE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EXT_FEE_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.EXT_FEE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double OVERPAYMENT_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP.OVERPAYMENT_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OVERPAYMENT_RESIDUAL\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.OVERPAYMENT_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string actual_id {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP.actual_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'actual_id\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.actual_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'status\' в таблице \'TOTAL_SNAP\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSnapdateNull() {
                return this.IsNull(this.tableTOTAL_SNAP.SnapdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSnapdateNull() {
                this[this.tableTOTAL_SNAP.SnapdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscountryNull() {
                return this.IsNull(this.tableTOTAL_SNAP.countryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcountryNull() {
                this[this.tableTOTAL_SNAP.countryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isa_idNull() {
                return this.IsNull(this.tableTOTAL_SNAP.a_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Seta_idNull() {
                this[this.tableTOTAL_SNAP.a_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRINCIPAL_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.PRINCIPAL_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRINCIPAL_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.PRINCIPAL_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINT_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.INT_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINT_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.INT_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFEE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.FEE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFEE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.FEE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRINCIPAL_OVERDUE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.PRINCIPAL_OVERDUE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRINCIPAL_OVERDUE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.PRINCIPAL_OVERDUE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINT_OVERDUE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.INT_OVERDUE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINT_OVERDUE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.INT_OVERDUE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFEE_OVERDUE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.FEE_OVERDUE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFEE_OVERDUE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.FEE_OVERDUE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDPDNull() {
                return this.IsNull(this.tableTOTAL_SNAP.DPDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDPDNull() {
                this[this.tableTOTAL_SNAP.DPDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPREPAY_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.PREPAY_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPREPAY_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.PREPAY_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPENALTIES_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.PENALTIES_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPENALTIES_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.PENALTIES_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOTHER_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.OTHER_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOTHER_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.OTHER_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEXT_FEE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.EXT_FEE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEXT_FEE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.EXT_FEE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOVERPAYMENT_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP.OVERPAYMENT_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOVERPAYMENT_RESIDUALNull() {
                this[this.tableTOTAL_SNAP.OVERPAYMENT_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isactual_idNull() {
                return this.IsNull(this.tableTOTAL_SNAP.actual_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setactual_idNull() {
                this[this.tableTOTAL_SNAP.actual_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsstatusNull() {
                return this.IsNull(this.tableTOTAL_SNAP.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetstatusNull() {
                this[this.tableTOTAL_SNAP.statusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TOTAL_SNAP_CFIELDRow : global::System.Data.DataRow {
            
            private TOTAL_SNAP_CFIELDDataTable tableTOTAL_SNAP_CFIELD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TOTAL_SNAP_CFIELDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTOTAL_SNAP_CFIELD = ((TOTAL_SNAP_CFIELDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SnapDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTOTAL_SNAP_CFIELD.SnapDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SnapDate\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.SnapDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int mob_v {
                get {
                    try {
                        return ((int)(this[this.tableTOTAL_SNAP_CFIELD.mob_vColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'mob_v\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.mob_vColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime a_month {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTOTAL_SNAP_CFIELD.a_monthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'a_month\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.a_monthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string a_id {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.a_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'a_id\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.a_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string country {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.countryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'country\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Product {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.ProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Product\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.ProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Product_group {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.Product_groupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Product_group\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.Product_groupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string b_product {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.b_productColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'b_product\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.b_productColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cycle_name {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.cycle_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'cycle_name\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.cycle_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string brand {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.brandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'brand\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.brandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string brand_cycle_type {
                get {
                    try {
                        return ((string)(this[this.tableTOTAL_SNAP_CFIELD.brand_cycle_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'brand_cycle_type\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.brand_cycle_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double loan_amount {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.loan_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'loan_amount\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.loan_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double loan_term {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.loan_termColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'loan_term\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.loan_termColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double loan_repay_amount {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.loan_repay_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'loan_repay_amount\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.loan_repay_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime loan_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTOTAL_SNAP_CFIELD.loan_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'loan_date\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.loan_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PRINCIPAL_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PRINCIPAL_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double INTFEE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.INTFEE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INTFEE_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.INTFEE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PORTFOLIO_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PORTFOLIO_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PREPAY_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.PREPAY_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PREPAY_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.PREPAY_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PENALTIES_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.PENALTIES_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PENALTIES_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.PENALTIES_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double OTHER_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.OTHER_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OTHER_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.OTHER_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double EXT_FEE_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.EXT_FEE_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EXT_FEE_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.EXT_FEE_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double OVERPAYMENT_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.OVERPAYMENT_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OVERPAYMENT_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.OVERPAYMENT_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PORTFOLIO_SOLD_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_SOLD_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PORTFOLIO_SOLD_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_SOLD_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double PRINCIPAL_SOLD_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_SOLD_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PRINCIPAL_SOLD_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_SOLD_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double INTFEE_SOLD_RESIDUAL {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.INTFEE_SOLD_RESIDUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INTFEE_SOLD_RESIDUAL\' в таблице \'TOTAL_SNAP_CFIELD\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.INTFEE_SOLD_RESIDUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AGREEMENT_CNT {
                get {
                    try {
                        return ((int)(this[this.tableTOTAL_SNAP_CFIELD.AGREEMENT_CNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'AGREEMENT_CNT\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.AGREEMENT_CNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AGREEMENT_SOLD_CNT {
                get {
                    try {
                        return ((int)(this[this.tableTOTAL_SNAP_CFIELD.AGREEMENT_SOLD_CNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'AGREEMENT_SOLD_CNT\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.AGREEMENT_SOLD_CNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double DPD {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.DPDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DPD\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.DPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double DPD_prev {
                get {
                    try {
                        return ((double)(this[this.tableTOTAL_SNAP_CFIELD.DPD_prevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DPD_prev\' в таблице \'TOTAL_SNAP_CFIELD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOTAL_SNAP_CFIELD.DPD_prevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSnapDateNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.SnapDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSnapDateNull() {
                this[this.tableTOTAL_SNAP_CFIELD.SnapDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ismob_vNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.mob_vColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setmob_vNull() {
                this[this.tableTOTAL_SNAP_CFIELD.mob_vColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isa_monthNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.a_monthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Seta_monthNull() {
                this[this.tableTOTAL_SNAP_CFIELD.a_monthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isa_idNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.a_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Seta_idNull() {
                this[this.tableTOTAL_SNAP_CFIELD.a_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscountryNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.countryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcountryNull() {
                this[this.tableTOTAL_SNAP_CFIELD.countryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProductNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.ProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProductNull() {
                this[this.tableTOTAL_SNAP_CFIELD.ProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProduct_groupNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.Product_groupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProduct_groupNull() {
                this[this.tableTOTAL_SNAP_CFIELD.Product_groupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isb_productNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.b_productColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setb_productNull() {
                this[this.tableTOTAL_SNAP_CFIELD.b_productColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iscycle_nameNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.cycle_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setcycle_nameNull() {
                this[this.tableTOTAL_SNAP_CFIELD.cycle_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsbrandNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.brandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetbrandNull() {
                this[this.tableTOTAL_SNAP_CFIELD.brandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isbrand_cycle_typeNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.brand_cycle_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setbrand_cycle_typeNull() {
                this[this.tableTOTAL_SNAP_CFIELD.brand_cycle_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isloan_amountNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.loan_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setloan_amountNull() {
                this[this.tableTOTAL_SNAP_CFIELD.loan_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isloan_termNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.loan_termColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setloan_termNull() {
                this[this.tableTOTAL_SNAP_CFIELD.loan_termColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isloan_repay_amountNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.loan_repay_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setloan_repay_amountNull() {
                this[this.tableTOTAL_SNAP_CFIELD.loan_repay_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isloan_dateNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.loan_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setloan_dateNull() {
                this[this.tableTOTAL_SNAP_CFIELD.loan_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRINCIPAL_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRINCIPAL_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINTFEE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.INTFEE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINTFEE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.INTFEE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPORTFOLIO_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPORTFOLIO_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPREPAY_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.PREPAY_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPREPAY_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.PREPAY_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPENALTIES_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.PENALTIES_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPENALTIES_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.PENALTIES_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOTHER_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.OTHER_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOTHER_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.OTHER_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEXT_FEE_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.EXT_FEE_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEXT_FEE_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.EXT_FEE_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOVERPAYMENT_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.OVERPAYMENT_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOVERPAYMENT_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.OVERPAYMENT_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPORTFOLIO_SOLD_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_SOLD_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPORTFOLIO_SOLD_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.PORTFOLIO_SOLD_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRINCIPAL_SOLD_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_SOLD_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRINCIPAL_SOLD_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.PRINCIPAL_SOLD_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINTFEE_SOLD_RESIDUALNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.INTFEE_SOLD_RESIDUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINTFEE_SOLD_RESIDUALNull() {
                this[this.tableTOTAL_SNAP_CFIELD.INTFEE_SOLD_RESIDUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAGREEMENT_CNTNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.AGREEMENT_CNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAGREEMENT_CNTNull() {
                this[this.tableTOTAL_SNAP_CFIELD.AGREEMENT_CNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAGREEMENT_SOLD_CNTNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.AGREEMENT_SOLD_CNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAGREEMENT_SOLD_CNTNull() {
                this[this.tableTOTAL_SNAP_CFIELD.AGREEMENT_SOLD_CNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDPDNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.DPDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDPDNull() {
                this[this.tableTOTAL_SNAP_CFIELD.DPDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDPD_prevNull() {
                return this.IsNull(this.tableTOTAL_SNAP_CFIELD.DPD_prevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDPD_prevNull() {
                this[this.tableTOTAL_SNAP_CFIELD.DPD_prevColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TOTAL_SNAPRowChangeEvent : global::System.EventArgs {
            
            private TOTAL_SNAPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAPRowChangeEvent(TOTAL_SNAPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TOTAL_SNAP_CFIELDRowChangeEvent : global::System.EventArgs {
            
            private TOTAL_SNAP_CFIELDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAP_CFIELDRowChangeEvent(TOTAL_SNAP_CFIELDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TOTAL_SNAP_CFIELDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace robot.Total_BosniaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TOTAL_SNAPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TOTAL_SNAPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TOTAL_SNAP";
            tableMapping.ColumnMappings.Add("Snapdate", "Snapdate");
            tableMapping.ColumnMappings.Add("country", "country");
            tableMapping.ColumnMappings.Add("a_id", "a_id");
            tableMapping.ColumnMappings.Add("PRINCIPAL_RESIDUAL", "PRINCIPAL_RESIDUAL");
            tableMapping.ColumnMappings.Add("INT_RESIDUAL", "INT_RESIDUAL");
            tableMapping.ColumnMappings.Add("FEE_RESIDUAL", "FEE_RESIDUAL");
            tableMapping.ColumnMappings.Add("PRINCIPAL_OVERDUE_RESIDUAL", "PRINCIPAL_OVERDUE_RESIDUAL");
            tableMapping.ColumnMappings.Add("INT_OVERDUE_RESIDUAL", "INT_OVERDUE_RESIDUAL");
            tableMapping.ColumnMappings.Add("FEE_OVERDUE_RESIDUAL", "FEE_OVERDUE_RESIDUAL");
            tableMapping.ColumnMappings.Add("DPD", "DPD");
            tableMapping.ColumnMappings.Add("PREPAY_RESIDUAL", "PREPAY_RESIDUAL");
            tableMapping.ColumnMappings.Add("PENALTIES_RESIDUAL", "PENALTIES_RESIDUAL");
            tableMapping.ColumnMappings.Add("OTHER_RESIDUAL", "OTHER_RESIDUAL");
            tableMapping.ColumnMappings.Add("EXT_FEE_RESIDUAL", "EXT_FEE_RESIDUAL");
            tableMapping.ColumnMappings.Add("OVERPAYMENT_RESIDUAL", "OVERPAYMENT_RESIDUAL");
            tableMapping.ColumnMappings.Add("actual_id", "actual_id");
            tableMapping.ColumnMappings.Add("status", "status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TOTAL_SNAP] ([Snapdate], [country], [a_id], [PRINCIPAL_RESIDUAL], [INT_RESIDUAL], [FEE_RESIDUAL], [PRINCIPAL_OVERDUE_RESIDUAL], [INT_OVERDUE_RESIDUAL], [FEE_OVERDUE_RESIDUAL], [DPD], [PREPAY_RESIDUAL], [PENALTIES_RESIDUAL], [OTHER_RESIDUAL], [EXT_FEE_RESIDUAL], [OVERPAYMENT_RESIDUAL], [actual_id], [status]) VALUES (@Snapdate, @country, @a_id, @PRINCIPAL_RESIDUAL, @INT_RESIDUAL, @FEE_RESIDUAL, @PRINCIPAL_OVERDUE_RESIDUAL, @INT_OVERDUE_RESIDUAL, @FEE_OVERDUE_RESIDUAL, @DPD, @PREPAY_RESIDUAL, @PENALTIES_RESIDUAL, @OTHER_RESIDUAL, @EXT_FEE_RESIDUAL, @OVERPAYMENT_RESIDUAL, @actual_id, @status)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Snapdate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Snapdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@a_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRINCIPAL_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRINCIPAL_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INT_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FEE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRINCIPAL_OVERDUE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRINCIPAL_OVERDUE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INT_OVERDUE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_OVERDUE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FEE_OVERDUE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEE_OVERDUE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAY_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAY_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PENALTIES_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PENALTIES_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT_FEE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXT_FEE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVERPAYMENT_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVERPAYMENT_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@actual_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "actual_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::robot.Properties.Settings.Default.Total_BosniaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from [dbo].[TOTAL_SNAP]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM TOTAL_SNAP\r\nWHERE (Snapdate = @date)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "Snapdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"INSERT INTO TOTAL_SNAP
             (Snapdate, country, a_id, PRINCIPAL_RESIDUAL, INT_RESIDUAL, FEE_RESIDUAL, PRINCIPAL_OVERDUE_RESIDUAL, INT_OVERDUE_RESIDUAL, FEE_OVERDUE_RESIDUAL, DPD, PREPAY_RESIDUAL, PENALTIES_RESIDUAL, OTHER_RESIDUAL, EXT_FEE_RESIDUAL, 
             OVERPAYMENT_RESIDUAL, actual_id, status)
SELECT Snapdate, country, a_id, PRINCIPAL_RESIDUAL, INT_RESIDUAL, FEE_RESIDUAL, PRINCIPAL_OVERDUE_RESIDUAL, INT_OVERDUE_RESIDUAL, FEE_OVERDUE_RESIDUAL, DPD, PREPAY_RESIDUAL, PENALTIES_RESIDUAL, OTHER_RESIDUAL, EXT_FEE_RESIDUAL, 
             OVERPAYMENT_RESIDUAL, actual_id, status
FROM   DWH_Risk.dbo.TOTAL_SNAP AS TOTAL_SNAP_1
WHERE (country = 'BIH') AND (Snapdate = @date)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 3, global::System.Data.ParameterDirection.Input, 0, 0, "Snapdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Total_Bosnia.TOTAL_SNAPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Total_Bosnia.TOTAL_SNAPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Total_Bosnia.TOTAL_SNAPDataTable dataTable = new Total_Bosnia.TOTAL_SNAPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Total_Bosnia.TOTAL_SNAPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Total_Bosnia dataSet) {
            return this.Adapter.Update(dataSet, "TOTAL_SNAP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> Snapdate, 
                    string country, 
                    string a_id, 
                    global::System.Nullable<double> PRINCIPAL_RESIDUAL, 
                    global::System.Nullable<double> INT_RESIDUAL, 
                    global::System.Nullable<double> FEE_RESIDUAL, 
                    global::System.Nullable<double> PRINCIPAL_OVERDUE_RESIDUAL, 
                    global::System.Nullable<double> INT_OVERDUE_RESIDUAL, 
                    global::System.Nullable<double> FEE_OVERDUE_RESIDUAL, 
                    global::System.Nullable<double> DPD, 
                    global::System.Nullable<double> PREPAY_RESIDUAL, 
                    global::System.Nullable<double> PENALTIES_RESIDUAL, 
                    global::System.Nullable<double> OTHER_RESIDUAL, 
                    global::System.Nullable<double> EXT_FEE_RESIDUAL, 
                    global::System.Nullable<double> OVERPAYMENT_RESIDUAL, 
                    string actual_id, 
                    string status) {
            if ((Snapdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Snapdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((country == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(country));
            }
            if ((a_id == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(a_id));
            }
            if ((PRINCIPAL_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(PRINCIPAL_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((INT_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(INT_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FEE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(FEE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PRINCIPAL_OVERDUE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(PRINCIPAL_OVERDUE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((INT_OVERDUE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(INT_OVERDUE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((FEE_OVERDUE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(FEE_OVERDUE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DPD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(DPD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((PREPAY_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(PREPAY_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((PENALTIES_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(PENALTIES_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((OTHER_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(OTHER_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((EXT_FEE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(EXT_FEE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((OVERPAYMENT_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(OVERPAYMENT_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((actual_id == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(actual_id));
            }
            if ((status == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(status));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeletePeriod(string date) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((date == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(date));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertPeriod(global::System.Nullable<global::System.DateTime> date) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((date.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(date.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TOTAL_SNAP_CFIELDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TOTAL_SNAP_CFIELDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TOTAL_SNAP_CFIELD";
            tableMapping.ColumnMappings.Add("SnapDate", "SnapDate");
            tableMapping.ColumnMappings.Add("mob_v", "mob_v");
            tableMapping.ColumnMappings.Add("a_month", "a_month");
            tableMapping.ColumnMappings.Add("a_id", "a_id");
            tableMapping.ColumnMappings.Add("country", "country");
            tableMapping.ColumnMappings.Add("Product", "Product");
            tableMapping.ColumnMappings.Add("Product_group", "Product_group");
            tableMapping.ColumnMappings.Add("b_product", "b_product");
            tableMapping.ColumnMappings.Add("cycle_name", "cycle_name");
            tableMapping.ColumnMappings.Add("brand", "brand");
            tableMapping.ColumnMappings.Add("brand_cycle_type", "brand_cycle_type");
            tableMapping.ColumnMappings.Add("loan_amount", "loan_amount");
            tableMapping.ColumnMappings.Add("loan_term", "loan_term");
            tableMapping.ColumnMappings.Add("loan_repay_amount", "loan_repay_amount");
            tableMapping.ColumnMappings.Add("loan_date", "loan_date");
            tableMapping.ColumnMappings.Add("PRINCIPAL_RESIDUAL", "PRINCIPAL_RESIDUAL");
            tableMapping.ColumnMappings.Add("INTFEE_RESIDUAL", "INTFEE_RESIDUAL");
            tableMapping.ColumnMappings.Add("PORTFOLIO_RESIDUAL", "PORTFOLIO_RESIDUAL");
            tableMapping.ColumnMappings.Add("PREPAY_RESIDUAL", "PREPAY_RESIDUAL");
            tableMapping.ColumnMappings.Add("PENALTIES_RESIDUAL", "PENALTIES_RESIDUAL");
            tableMapping.ColumnMappings.Add("OTHER_RESIDUAL", "OTHER_RESIDUAL");
            tableMapping.ColumnMappings.Add("EXT_FEE_RESIDUAL", "EXT_FEE_RESIDUAL");
            tableMapping.ColumnMappings.Add("OVERPAYMENT_RESIDUAL", "OVERPAYMENT_RESIDUAL");
            tableMapping.ColumnMappings.Add("PORTFOLIO_SOLD_RESIDUAL", "PORTFOLIO_SOLD_RESIDUAL");
            tableMapping.ColumnMappings.Add("PRINCIPAL_SOLD_RESIDUAL", "PRINCIPAL_SOLD_RESIDUAL");
            tableMapping.ColumnMappings.Add("INTFEE_SOLD_RESIDUAL", "INTFEE_SOLD_RESIDUAL");
            tableMapping.ColumnMappings.Add("AGREEMENT_CNT", "AGREEMENT_CNT");
            tableMapping.ColumnMappings.Add("AGREEMENT_SOLD_CNT", "AGREEMENT_SOLD_CNT");
            tableMapping.ColumnMappings.Add("DPD", "DPD");
            tableMapping.ColumnMappings.Add("DPD_prev", "DPD_prev");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TOTAL_SNAP_CFIELD] ([SnapDate], [mob_v], [a_month], [a_id], [country], [Product], [Product_group], [b_product], [cycle_name], [brand], [brand_cycle_type], [loan_amount], [loan_term], [loan_repay_amount], [loan_date], [PRINCIPAL_RESIDUAL], [INTFEE_RESIDUAL], [PORTFOLIO_RESIDUAL], [PREPAY_RESIDUAL], [PENALTIES_RESIDUAL], [OTHER_RESIDUAL], [EXT_FEE_RESIDUAL], [OVERPAYMENT_RESIDUAL], [PORTFOLIO_SOLD_RESIDUAL], [PRINCIPAL_SOLD_RESIDUAL], [INTFEE_SOLD_RESIDUAL], [AGREEMENT_CNT], [AGREEMENT_SOLD_CNT], [DPD], [DPD_prev]) VALUES (@SnapDate, @mob_v, @a_month, @a_id, @country, @Product, @Product_group, @b_product, @cycle_name, @brand, @brand_cycle_type, @loan_amount, @loan_term, @loan_repay_amount, @loan_date, @PRINCIPAL_RESIDUAL, @INTFEE_RESIDUAL, @PORTFOLIO_RESIDUAL, @PREPAY_RESIDUAL, @PENALTIES_RESIDUAL, @OTHER_RESIDUAL, @EXT_FEE_RESIDUAL, @OVERPAYMENT_RESIDUAL, @PORTFOLIO_SOLD_RESIDUAL, @PRINCIPAL_SOLD_RESIDUAL, @INTFEE_SOLD_RESIDUAL, @AGREEMENT_CNT, @AGREEMENT_SOLD_CNT, @DPD, @DPD_prev)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SnapDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SnapDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mob_v", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mob_v", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@a_month", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a_month", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@a_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Product", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_group", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Product_group", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@b_product", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b_product", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cycle_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cycle_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@brand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@brand_cycle_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brand_cycle_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loan_amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loan_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loan_term", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loan_term", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loan_repay_amount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loan_repay_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loan_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loan_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRINCIPAL_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRINCIPAL_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INTFEE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTFEE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PORTFOLIO_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PORTFOLIO_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAY_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAY_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PENALTIES_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PENALTIES_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT_FEE_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXT_FEE_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVERPAYMENT_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVERPAYMENT_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PORTFOLIO_SOLD_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PORTFOLIO_SOLD_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRINCIPAL_SOLD_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRINCIPAL_SOLD_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INTFEE_SOLD_RESIDUAL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTFEE_SOLD_RESIDUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGREEMENT_CNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGREEMENT_CNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGREEMENT_SOLD_CNT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGREEMENT_SOLD_CNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPD_prev", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPD_prev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::robot.Properties.Settings.Default.Total_BosniaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from dbo.TOTAL_SNAP_CFIELD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "delete from dbo.TOTAL_SNAP_CFIELD where Snapdate = @date";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "SnapDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"INSERT INTO [dbo].[TOTAL_SNAP_CFIELD] ([SnapDate], [mob_v], [a_month], [a_id], [country], [Product], [Product_group], [b_product], [cycle_name], [brand], [brand_cycle_type], [loan_amount], [loan_term], [loan_repay_amount], [loan_date], [PRINCIPAL_RESIDUAL], [INTFEE_RESIDUAL], [PORTFOLIO_RESIDUAL], [PREPAY_RESIDUAL], [PENALTIES_RESIDUAL], [OTHER_RESIDUAL], [EXT_FEE_RESIDUAL], [OVERPAYMENT_RESIDUAL], [PORTFOLIO_SOLD_RESIDUAL], [PRINCIPAL_SOLD_RESIDUAL], [INTFEE_SOLD_RESIDUAL], [AGREEMENT_CNT], [AGREEMENT_SOLD_CNT], [DPD], [DPD_prev]) 
select 
[SnapDate], [mob_v], [a_month], [a_id], [country], [Product], [Product_group], [b_product], [cycle_name], [brand], [brand_cycle_type], [loan_amount], [loan_term], [loan_repay_amount], [loan_date], [PRINCIPAL_RESIDUAL], [INTFEE_RESIDUAL], [PORTFOLIO_RESIDUAL], [PREPAY_RESIDUAL], [PENALTIES_RESIDUAL], [OTHER_RESIDUAL], [EXT_FEE_RESIDUAL], [OVERPAYMENT_RESIDUAL], [PORTFOLIO_SOLD_RESIDUAL], [PRINCIPAL_SOLD_RESIDUAL], [INTFEE_SOLD_RESIDUAL], [AGREEMENT_CNT], [AGREEMENT_SOLD_CNT], [DPD], [DPD_prev]
from [DWH_Risk].[dbo].[TOTAL_SNAP_CFIELD] where country = 'BIH' and Snapdate = @date";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 3, global::System.Data.ParameterDirection.Input, 0, 0, "SnapDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Total_Bosnia.TOTAL_SNAP_CFIELDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Total_Bosnia.TOTAL_SNAP_CFIELDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Total_Bosnia.TOTAL_SNAP_CFIELDDataTable dataTable = new Total_Bosnia.TOTAL_SNAP_CFIELDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Total_Bosnia.TOTAL_SNAP_CFIELDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Total_Bosnia dataSet) {
            return this.Adapter.Update(dataSet, "TOTAL_SNAP_CFIELD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> SnapDate, 
                    global::System.Nullable<int> mob_v, 
                    global::System.Nullable<global::System.DateTime> a_month, 
                    string a_id, 
                    string country, 
                    string Product, 
                    string Product_group, 
                    string b_product, 
                    string cycle_name, 
                    string brand, 
                    string brand_cycle_type, 
                    global::System.Nullable<double> loan_amount, 
                    global::System.Nullable<double> loan_term, 
                    global::System.Nullable<double> loan_repay_amount, 
                    global::System.Nullable<global::System.DateTime> loan_date, 
                    global::System.Nullable<double> PRINCIPAL_RESIDUAL, 
                    global::System.Nullable<double> INTFEE_RESIDUAL, 
                    global::System.Nullable<double> PORTFOLIO_RESIDUAL, 
                    global::System.Nullable<double> PREPAY_RESIDUAL, 
                    global::System.Nullable<double> PENALTIES_RESIDUAL, 
                    global::System.Nullable<double> OTHER_RESIDUAL, 
                    global::System.Nullable<double> EXT_FEE_RESIDUAL, 
                    global::System.Nullable<double> OVERPAYMENT_RESIDUAL, 
                    global::System.Nullable<double> PORTFOLIO_SOLD_RESIDUAL, 
                    global::System.Nullable<double> PRINCIPAL_SOLD_RESIDUAL, 
                    global::System.Nullable<double> INTFEE_SOLD_RESIDUAL, 
                    global::System.Nullable<int> AGREEMENT_CNT, 
                    global::System.Nullable<int> AGREEMENT_SOLD_CNT, 
                    global::System.Nullable<double> DPD, 
                    global::System.Nullable<double> DPD_prev) {
            if ((SnapDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(SnapDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((mob_v.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(mob_v.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((a_month.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(a_month.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((a_id == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(a_id));
            }
            if ((country == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(country));
            }
            if ((Product == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Product));
            }
            if ((Product_group == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Product_group));
            }
            if ((b_product == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(b_product));
            }
            if ((cycle_name == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(cycle_name));
            }
            if ((brand == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(brand));
            }
            if ((brand_cycle_type == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(brand_cycle_type));
            }
            if ((loan_amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(loan_amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((loan_term.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(loan_term.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((loan_repay_amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(loan_repay_amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((loan_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(loan_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((PRINCIPAL_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(PRINCIPAL_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((INTFEE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(INTFEE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PORTFOLIO_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(PORTFOLIO_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PREPAY_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(PREPAY_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((PENALTIES_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(PENALTIES_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((OTHER_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(OTHER_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((EXT_FEE_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(EXT_FEE_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((OVERPAYMENT_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(OVERPAYMENT_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((PORTFOLIO_SOLD_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(PORTFOLIO_SOLD_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PRINCIPAL_SOLD_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(PRINCIPAL_SOLD_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((INTFEE_SOLD_RESIDUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(INTFEE_SOLD_RESIDUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((AGREEMENT_CNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(AGREEMENT_CNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((AGREEMENT_SOLD_CNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(AGREEMENT_SOLD_CNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((DPD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(DPD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((DPD_prev.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(DPD_prev.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeletePeriod(string date) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((date == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(date));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertPeriod(global::System.Nullable<global::System.DateTime> date) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((date.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(date.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SPBosnia : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::robot.Properties.Settings.Default.Total_BosniaConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "dbo.TOTAL_BIH_SNAP_CFIELD";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object sp_BIH_TOTAL_SNAP_CFIELD() {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TOTAL_SNAPTableAdapter _tOTAL_SNAPTableAdapter;
        
        private TOTAL_SNAP_CFIELDTableAdapter _tOTAL_SNAP_CFIELDTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TOTAL_SNAPTableAdapter TOTAL_SNAPTableAdapter {
            get {
                return this._tOTAL_SNAPTableAdapter;
            }
            set {
                this._tOTAL_SNAPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TOTAL_SNAP_CFIELDTableAdapter TOTAL_SNAP_CFIELDTableAdapter {
            get {
                return this._tOTAL_SNAP_CFIELDTableAdapter;
            }
            set {
                this._tOTAL_SNAP_CFIELDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tOTAL_SNAPTableAdapter != null) 
                            && (this._tOTAL_SNAPTableAdapter.Connection != null))) {
                    return this._tOTAL_SNAPTableAdapter.Connection;
                }
                if (((this._tOTAL_SNAP_CFIELDTableAdapter != null) 
                            && (this._tOTAL_SNAP_CFIELDTableAdapter.Connection != null))) {
                    return this._tOTAL_SNAP_CFIELDTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tOTAL_SNAPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tOTAL_SNAP_CFIELDTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(Total_Bosnia dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tOTAL_SNAPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TOTAL_SNAP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tOTAL_SNAPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tOTAL_SNAP_CFIELDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TOTAL_SNAP_CFIELD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tOTAL_SNAP_CFIELDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(Total_Bosnia dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tOTAL_SNAPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TOTAL_SNAP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tOTAL_SNAPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tOTAL_SNAP_CFIELDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TOTAL_SNAP_CFIELD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tOTAL_SNAP_CFIELDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(Total_Bosnia dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tOTAL_SNAP_CFIELDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TOTAL_SNAP_CFIELD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tOTAL_SNAP_CFIELDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tOTAL_SNAPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TOTAL_SNAP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tOTAL_SNAPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(Total_Bosnia dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tOTAL_SNAPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tOTAL_SNAPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._tOTAL_SNAP_CFIELDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tOTAL_SNAP_CFIELDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tOTAL_SNAPTableAdapter != null)) {
                    revertConnections.Add(this._tOTAL_SNAPTableAdapter, this._tOTAL_SNAPTableAdapter.Connection);
                    this._tOTAL_SNAPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tOTAL_SNAPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tOTAL_SNAPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tOTAL_SNAPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tOTAL_SNAPTableAdapter.Adapter);
                    }
                }
                if ((this._tOTAL_SNAP_CFIELDTableAdapter != null)) {
                    revertConnections.Add(this._tOTAL_SNAP_CFIELDTableAdapter, this._tOTAL_SNAP_CFIELDTableAdapter.Connection);
                    this._tOTAL_SNAP_CFIELDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tOTAL_SNAP_CFIELDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tOTAL_SNAP_CFIELDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tOTAL_SNAP_CFIELDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tOTAL_SNAP_CFIELDTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tOTAL_SNAPTableAdapter != null)) {
                    this._tOTAL_SNAPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tOTAL_SNAPTableAdapter]));
                    this._tOTAL_SNAPTableAdapter.Transaction = null;
                }
                if ((this._tOTAL_SNAP_CFIELDTableAdapter != null)) {
                    this._tOTAL_SNAP_CFIELDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tOTAL_SNAP_CFIELDTableAdapter]));
                    this._tOTAL_SNAP_CFIELDTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591